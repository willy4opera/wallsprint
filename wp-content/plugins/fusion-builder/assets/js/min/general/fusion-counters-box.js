!function(e){"use strict";e.fn.awbAnimateCounterBoxes=function(){"IntersectionObserver"in window?e.each(fusion.getObserverSegmentation(e(this)),(function(t){var n=fusion.getAnimationIntersectionData(t),o=new IntersectionObserver((function(t,n){e.each(t,(function(t,i){var r=e(i.target),a=r.data("value")?r.data("value").toString().replace(/(<([^>]+)>)/gi,""):"",u=r.data("direction")?r.data("direction").toString().replace(/(<([^>]+)>)/gi,""):"",s=r.data("delimiter")?r.data("delimiter").toString().replace(/(<([^>]+)>)/gi,""):"",d=0,c=a,f=fusionCountersBox.counter_box_speed,l=Math.round(fusionCountersBox.counter_box_speed/100);fusion.shouldObserverEntryAnimate(i,n)&&(s||(s=""),"down"===u&&(d=a,c=0),r.countTo({from:d,to:c,refreshInterval:l,speed:f,formatter:function(e,t){return"-0"===(e=(e=e.toFixed(t.decimals)).replace(/\B(?=(\d{3})+(?!\d))/g,s))&&(e=0),e}}),o.unobserve(i.target))}))}),n);e(this).find(".display-counter").each((function(){o.observe(this)}))})):e(this).find(".display-counter").each((function(){e(this).text(e(this).data("value"))}))}}(jQuery),jQuery(window).on("load fusion-element-render-fusion-counters_box fusion-element-render-fusion_counter_box",(function(e,t){(void 0!==t?jQuery('div[data-cid="'+t+'"]'):jQuery(".fusion-counter-box")).awbAnimateCounterBoxes()}));